basePath: /
definitions:
  models.Director:
    properties:
      age:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  models.Genre:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  models.Movie:
    properties:
      director:
        $ref: '#/definitions/models.Director'
      director_id:
        type: integer
      genre:
        $ref: '#/definitions/models.Genre'
      genre_id:
        type: integer
      id:
        type: integer
      rating:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: A simple Movie and Director API
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Movie API
  version: "1.0"
paths:
  /directors:
    get:
      description: Retrieve all directors in the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Director'
            type: array
      summary: Get all directors
      tags:
      - directors
    post:
      consumes:
      - application/json
      description: Add a new director to the database
      parameters:
      - description: Director Data
        in: body
        name: director
        required: true
        schema:
          $ref: '#/definitions/models.Director'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Director'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new director
      tags:
      - directors
  /genres:
    get:
      description: Get a list of all genres in the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Genre'
            type: array
      summary: Get all genres
      tags:
      - genres
    post:
      consumes:
      - application/json
      description: Add a new movie to the database
      parameters:
      - description: Genre Data
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.Genre'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Genre'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new genre
      tags:
      - genres
  /movies:
    get:
      description: Get a list of all movies in the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Movie'
            type: array
      summary: Get all movies
      tags:
      - movies
    post:
      consumes:
      - application/json
      description: Add a new movie to the database
      parameters:
      - description: Movie Data
        in: body
        name: movie
        required: true
        schema:
          $ref: '#/definitions/models.Movie'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
      summary: Create a new movie
      tags:
      - movies
  /movies/{id}:
    get:
      description: Retrieve a specific movie by ID
      parameters:
      - description: Movie ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get a movie by ID
      tags:
      - movies
swagger: "2.0"
